AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  SNSMsgJSON:
    Default: '{"policyNames":[{"type":"s3","region":"us-east-1","name":"ss-cf-templates"}],"accountids":[]}'
    Description: SNS Massage to Send
    Type: String
  StackUpdate:
    Default: AWS-Landing-Zone-CentralizedLoggingS3Primary
    Description: New Account Notification StackSet
    Type: String
Resources:
  NewAccountNotification:
    Properties:
      CodeUri: s3://397173662143-us-east-1-code/9b48599619bf2851134d657667469166
      Description: When a new account is created it will send a json message to an
        sns topic.
      Environment:
        Variables:
          SNSMessageTemplate:
            Ref: SNSMsgJSON
          SNStopicArn:
            Ref: NewAccountNotificationSNSTopic
          StackSettoUpdate:
            Ref: StackUpdate
      Events:
        NewOrgAccountEvent:
          Properties:
            Pattern:
              detail:
                eventName:
                - CreateAccount
                eventSource:
                - organizations.amazonaws.com
              detail-type:
              - AWS API Call via CloudTrail
              source:
              - aws.organizations
          Type: CloudWatchEvent
      FunctionName: new_account_notification
      Handler: new_account_notification.lambda_handler
      Policies:
      - AWSLambdaExecute
      - Statement:
        - Action:
          - SNS:Publish
          Effect: Allow
          Resource: '*'
        - Action:
          - cloudformation:DescribeStackSet
          - cloudformation:UpdateStackSet
          - cloudformation:DescribeChangeSet
          - cloudformation:ListChangeSets
          - cloudformation:DescribeStacks
          Effect: Allow
          Resource: '*'
        - Action:
          - organizations:ListAccounts
          Effect: Allow
          Resource: '*'
        - Action:
          - ssm:GetParameter*
          - ssm:PutParameter
          Effect: Allow
          Resource:
            Fn::Sub: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/org/member/accounts
        Version: '2012-10-17'
      Runtime: python3.7
      Timeout: 360
    Type: AWS::Serverless::Function
  NewAccountNotificationSNSTopic:
    Properties:
      DisplayName: NewAccountNotification
      TopicName: account_lists
    Type: AWS::SNS::Topic
  ReadOrgWriteSSMRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - SNS:Publish
            Effect: Allow
            Resource: '*'
          - Action:
            - cloudformation:DescribeStackSet
            - cloudformation:UpdateStackSet
            - cloudformation:DescribeChangeSet
            - cloudformation:ListChangeSets
            - cloudformation:DescribeStacks
            Effect: Allow
            Resource: '*'
          - Action:
            - organizations:ListAccounts
            Effect: Allow
            Resource: '*'
          - Action:
            - ssm:GetParameter*
            - ssm:PutParameter
            Effect: Allow
            Resource:
              Fn::Sub: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/org/member/accounts
        PolicyName: ReadOrganizationWriteSSM
    Type: AWS::IAM::Role
Transform: AWS::Serverless-2016-10-31
